"""
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ø—Ä–µ–º–∏—É–º –¥–∏–∑–∞–π–Ω–æ–º
–ò–∑—É–º—Ä—É–¥–Ω—ã–µ –∏ –∑–æ–ª–æ—Ç—ã–µ –∞–∫—Ü–µ–Ω—Ç—ã —Å–æ–≥–ª–∞—Å–Ω–æ –¥–∏–∑–∞–π–Ω-–≥–∞–π–¥—É
"""

import customtkinter as ctk
from typing import Optional, Callable
from datetime import datetime
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))
from themes.dark_theme import DarkTheme


class HeaderPanel(ctk.CTkFrame):
    """–ü—Ä–µ–º–∏—É–º –ø–∞–Ω–µ–ª—å –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –∏–∑—É–º—Ä—É–¥–Ω—ã–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏"""
    
    def __init__(self, parent, on_reconnect_callback: Optional[Callable] = None):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
        
        Args:
            parent: –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –≤–∏–¥–∂–µ—Ç
            on_reconnect_callback: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
        """
        super().__init__(
            parent, 
            fg_color=DarkTheme.BG_SECONDARY,
            height=70,
            corner_radius=DarkTheme.RADIUS_LARGE
        )
        
        self.on_reconnect = on_reconnect_callback
        self.is_connected = False
        self.animation_active = False
        
        # –ù–µ –ø–æ–∑–≤–æ–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É –º–µ–Ω—è—Ç—å —Ä–∞–∑–º–µ—Ä —Ñ—Ä–µ–π–º–∞
        self.pack_propagate(False)
        
        # –°–æ–∑–¥–∞—ë–º —ç–ª–µ–º–µ–Ω—Ç—ã
        self._create_widgets()
        
        # –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        self.set_connection_status(False)
        
        # –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏ –ª–æ–≥–æ—Ç–∏–ø–∞
        self._start_logo_pulse()
    
    def _create_widgets(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–æ–≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å –ø—Ä–µ–º–∏—É–º –¥–∏–∑–∞–π–Ω–æ–º"""
        
        # ===== –õ–ï–í–ê–Ø –ß–ê–°–¢–¨ - –õ–û–ì–û–¢–ò–ü –ò –ù–ê–ó–í–ê–ù–ò–ï =====
        self.left_frame = ctk.CTkFrame(self, fg_color='transparent')
        self.left_frame.pack(side='left', padx=25, pady=15)
        
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ª–æ–≥–æ—Ç–∏–ø–∞ —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º —Å–≤–µ—á–µ–Ω–∏—è
        self.logo_container = ctk.CTkFrame(
            self.left_frame,
            fg_color=DarkTheme.DEEP_EMERALD,
            corner_radius=12,
            width=50,
            height=50,
            border_width=2,
            border_color=DarkTheme.JADE_GREEN
        )
        self.logo_container.pack(side='left', padx=(0, 15))
        self.logo_container.pack_propagate(False)
        
        # –õ–æ–≥–æ—Ç–∏–ø (—ç–º–æ–¥–∑–∏ –ª–∏—Å–∞ –∏–ª–∏ –±—Ä–∏–ª–ª–∏–∞–Ω—Ç –¥–ª—è –ø—Ä–µ–º–∏—É–º –≤–µ—Ä—Å–∏–∏)
        self.logo = ctk.CTkLabel(
            self.logo_container,
            text="üíé",  # –ë—Ä–∏–ª–ª–∏–∞–Ω—Ç –¥–ª—è –ø—Ä–µ–º–∏—É–º –≤–µ—Ä—Å–∏–∏
            font=("Segoe UI Emoji", 24)
        )
        self.logo.pack(expand=True)
        
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ç–µ–∫—Å—Ç–∞
        text_container = ctk.CTkFrame(self.left_frame, fg_color='transparent')
        text_container.pack(side='left')
        
        # –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        self.title_label = ctk.CTkLabel(
            text_container,
            text="License Manager SD",
            font=("Montserrat", 20, "bold"),
            text_color=DarkTheme.PURE_WHITE
        )
        self.title_label.pack(anchor='w')
        
        # –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –≤–µ—Ä—Å–∏–µ–π (–∑–æ–ª–æ—Ç–æ–π —Ç–µ–∫—Å—Ç)
        self.subtitle_label = ctk.CTkLabel(
            text_container,
            text="Premium Edition v2.2",
            font=(DarkTheme.FONT_FAMILY, 12),
            text_color=DarkTheme.CHAMPAGNE_GOLD
        )
        self.subtitle_label.pack(anchor='w')
        
        # ===== –¶–ï–ù–¢–†–ê–õ–¨–ù–ê–Ø –ß–ê–°–¢–¨ - –í–†–ï–ú–Ø –ò –î–ê–¢–ê =====
        self.center_frame = ctk.CTkFrame(self, fg_color='transparent')
        self.center_frame.pack(side='left', expand=True, padx=20)
        
        # –í—Ä–µ–º—è
        self.time_label = ctk.CTkLabel(
            self.center_frame,
            text="",
            font=("Inter", 16, "bold"),
            text_color=DarkTheme.JADE_GREEN
        )
        self.time_label.pack()
        
        # –î–∞—Ç–∞
        self.date_label = ctk.CTkLabel(
            self.center_frame,
            text="",
            font=(DarkTheme.FONT_FAMILY, 11),
            text_color=DarkTheme.WARM_GRAY
        )
        self.date_label.pack()
        
        # –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
        self._update_time()
        
        # ===== –ü–†–ê–í–ê–Ø –ß–ê–°–¢–¨ - –°–¢–ê–¢–£–° –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø =====
        self.right_frame = ctk.CTkFrame(self, fg_color='transparent')
        self.right_frame.pack(side='right', padx=25, pady=15)
        
        # –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
        status_inner = ctk.CTkFrame(
            self.right_frame,
            fg_color=DarkTheme.BG_TERTIARY,
            corner_radius=DarkTheme.RADIUS_NORMAL
        )
        status_inner.pack(padx=10, pady=5, fill='x')
        
        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (—Ç–æ—á–∫–∞)
        self.connection_dot = ctk.CTkLabel(
            status_inner,
            text="‚óè",
            font=(DarkTheme.FONT_FAMILY, 12),
            text_color=DarkTheme.STATUS_ERROR
        )
        self.connection_dot.pack(side='left', padx=(15, 8))
        
        # –¢–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
        self.status_text = ctk.CTkLabel(
            status_inner,
            text="–û—Ç–∫–ª—é—á–µ–Ω–æ",
            font=(DarkTheme.FONT_FAMILY, 12, "bold"),
            text_color=DarkTheme.WARM_GRAY
        )
        self.status_text.pack(side='left', padx=(0, 15))
        
        # –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å –∏–∑—É–º—Ä—É–¥–Ω—ã–º –∞–∫—Ü–µ–Ω—Ç–æ–º
        self.reconnect_btn = ctk.CTkButton(
            status_inner,
            text="üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å",
            command=self._on_reconnect_click,
            fg_color=DarkTheme.DEEP_EMERALD,
            hover_color=DarkTheme.JADE_GREEN,
            text_color=DarkTheme.PURE_WHITE,
            corner_radius=DarkTheme.RADIUS_SMALL,
            width=120,
            height=28,
            font=(DarkTheme.FONT_FAMILY, 11, "bold")
        )
        self.reconnect_btn.pack(side='left', padx=(0, 15))
    
    def set_connection_status(self, is_connected: bool):
        """
        –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        
        Args:
            is_connected: True –µ—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ, False –µ—Å–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω–æ
        """
        self.is_connected = is_connected
        
        if is_connected:
            # –ü–æ–¥–∫–ª—é—á–µ–Ω–æ - –∑–µ–ª–µ–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∏ –∑–æ–ª–æ—Ç—ã–µ –∞–∫—Ü–µ–Ω—Ç—ã
            self.connection_dot.configure(text_color=DarkTheme.JADE_GREEN)
            self.status_text.configure(
                text="‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ —Å–µ—Ä–≤–µ—Ä—É",
                text_color=DarkTheme.JADE_GREEN
            )
            self.reconnect_btn.configure(
                text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
                fg_color=DarkTheme.CHAMPAGNE_GOLD,
                hover_color=DarkTheme.COPPER_BRONZE,
                text_color=DarkTheme.CHARCOAL_BLACK
            )
            # –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—É–ª—å—Å–∞—Ü–∏–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
            self._start_connection_pulse()
        else:
            # –û—Ç–∫–ª—é—á–µ–Ω–æ - –∫—Ä–∞—Å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
            self.connection_dot.configure(text_color="#D32F2F")
            self.status_text.configure(
                text="‚ùå –û—Ç–∫–ª—é—á–µ–Ω–æ",
                text_color=DarkTheme.WARM_GRAY
            )
            self.reconnect_btn.configure(
                text="üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å",
                fg_color=DarkTheme.DEEP_EMERALD,
                hover_color=DarkTheme.JADE_GREEN,
                text_color=DarkTheme.PURE_WHITE
            )
    
    def _on_reconnect_click(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"""
        if self.on_reconnect:
            # –ê–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏
            self._animate_button_click()
            self.on_reconnect()
    
    def _update_time(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∏ –¥–∞—Ç—ã"""
        now = datetime.now()
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
        time_str = now.strftime("%H:%M:%S")
        self.time_label.configure(text=time_str)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
        # –†—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—è—Ü–µ–≤
        months_ru = {
            1: "—è–Ω–≤–∞—Ä—è", 2: "—Ñ–µ–≤—Ä–∞–ª—è", 3: "–º–∞—Ä—Ç–∞", 4: "–∞–ø—Ä–µ–ª—è",
            5: "–º–∞—è", 6: "–∏—é–Ω—è", 7: "–∏—é–ª—è", 8: "–∞–≤–≥—É—Å—Ç–∞",
            9: "—Å–µ–Ω—Ç—è–±—Ä—è", 10: "–æ–∫—Ç—è–±—Ä—è", 11: "–Ω–æ—è–±—Ä—è", 12: "–¥–µ–∫–∞–±—Ä—è"
        }
        
        # –†—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
        weekdays_ru = {
            0: "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", 1: "–í—Ç–æ—Ä–Ω–∏–∫", 2: "–°—Ä–µ–¥–∞", 3: "–ß–µ—Ç–≤–µ—Ä–≥",
            4: "–ü—è—Ç–Ω–∏—Ü–∞", 5: "–°—É–±–±–æ—Ç–∞", 6: "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"
        }
        
        weekday = weekdays_ru[now.weekday()]
        month = months_ru[now.month]
        date_str = f"{weekday}, {now.day} {month} {now.year}"
        self.date_label.configure(text=date_str)
        
        # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
        self.after(1000, self._update_time)
    
    # ===== –ê–ù–ò–ú–ê–¶–ò–ò =====
    
    def _start_logo_pulse(self):
        """–ó–∞–ø—É—Å–∫ –ø—É–ª—å—Å–∞—Ü–∏–∏ –ª–æ–≥–æ—Ç–∏–ø–∞ (–∫–∞–∂–¥—ã–µ 4-5 —Å–µ–∫—É–Ω–¥)"""
        if not self.animation_active:
            self.animation_active = True
            self._pulse_logo()
    
    def _pulse_logo(self):
        """–ê–Ω–∏–º–∞—Ü–∏—è –ø—É–ª—å—Å–∞—Ü–∏–∏ –ª–æ–≥–æ—Ç–∏–ø–∞"""
        if not self.animation_active:
            return
        
        # –ò–∑–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø—É–ª—å—Å–∞—Ü–∏–∏
        original_size = 24
        
        def grow():
            self.logo.configure(font=("Segoe UI Emoji", 26))
            self.after(200, shrink)
        
        def shrink():
            self.logo.configure(font=("Segoe UI Emoji", original_size))
        
        grow()
        
        # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å —á–µ—Ä–µ–∑ 4-5 —Å–µ–∫—É–Ω–¥
        self.after(4500, self._pulse_logo)
    
    def _start_connection_pulse(self):
        """–ó–∞–ø—É—Å–∫ –ø—É–ª—å—Å–∞—Ü–∏–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"""
        if self.is_connected:
            self._pulse_connection()
    
    def _pulse_connection(self):
        """–ê–Ω–∏–º–∞—Ü–∏—è –ø—É–ª—å—Å–∞—Ü–∏–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞"""
        if not self.is_connected:
            return
        
        # –ú–∏–≥–∞–Ω–∏–µ –º–µ–∂–¥—É —è—Ä–∫–∏–º –∏ –ø—Ä–∏–≥–ª—É—à–µ–Ω–Ω—ã–º –∑–µ–ª–µ–Ω—ã–º
        current_color = self.connection_dot.cget("text_color")
        
        if current_color == DarkTheme.JADE_GREEN:
            self.connection_dot.configure(text_color=DarkTheme.SOFT_MINT)
        else:
            self.connection_dot.configure(text_color=DarkTheme.JADE_GREEN)
        
        # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
        self.after(1000, self._pulse_connection)
    
    def _animate_button_click(self):
        """–ê–Ω–∏–º–∞—Ü–∏—è –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏"""
        # –í—Ä–µ–º–µ–Ω–Ω–æ –º–µ–Ω—è–µ–º —Ü–≤–µ—Ç –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –Ω–∞–∂–∞—Ç–∏—è
        original_fg = self.reconnect_btn.cget("fg_color")
        
        self.reconnect_btn.configure(fg_color=DarkTheme.SOFT_MINT)
        self.after(150, lambda: self.reconnect_btn.configure(fg_color=original_fg))
    
    def update_server_info(self, host: str, port: int):
        """
        –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–µ—Ä–µ
        
        Args:
            host: –ê–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞
            port: –ü–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞
        """
        server_text = f"–°–µ—Ä–≤–µ—Ä: {host}:{port}"
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–µ—Ä–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    
    def set_loading_state(self, is_loading: bool):
        """
        –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
        
        Args:
            is_loading: True –µ—Å–ª–∏ –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞
        """
        if is_loading:
            self.reconnect_btn.configure(text="‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...", state="disabled")
        else:
            if self.is_connected:
                self.reconnect_btn.configure(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", state="normal")
            else:
                self.reconnect_btn.configure(text="üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å", state="normal")
    
    def destroy(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–π –ø—Ä–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏ –≤–∏–¥–∂–µ—Ç–∞"""
        self.animation_active = False
        super().destroy()
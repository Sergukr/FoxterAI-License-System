//+------------------------------------------------------------------+
//|                                          15_storage_manager.mqh  |
//|                   –ú–æ–¥—É–ª—å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è FoxterAI v2.0      |
//|                         –ë–ï–ó GlobalVariables –∏ FILE_COMMON       |
//+------------------------------------------------------------------+

//--- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –ø—É—Ç–µ–π
#define STORAGE_ROOT_DIR     "FoxterAI"
#define SETTINGS_FILE        "settings.dat"
#define STATE_FILE          "state.dat"
#define LICENSE_FILE        "license.key"

//--- –§–ª–∞–≥–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
bool g_IsCleanShutdown = false;        // –§–ª–∞–≥ —á–∏—Å—Ç–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è
datetime g_LastStateSave = 0;          // –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
bool g_WasCrashRecovery = false;       // –§–ª–∞–≥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ —Å–±–æ—è
string g_StorageAccountDir = "";       // –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞
string g_StorageSymbolDir = "";        // –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å–∏–º–≤–æ–ª–∞

//+------------------------------------------------------------------+
//| –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´ –•–†–ê–ù–ï–ù–ò–Ø                                  |
//+------------------------------------------------------------------+
void InitializeStorage() {
    // –í —Ç–µ—Å—Ç–µ—Ä–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
    if(IsTesting() || IsOptimization()) {
        Print("üìÅ –°–∏—Å—Ç–µ–º–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è v2.0: —Ä–µ–∂–∏–º —Ç–µ—Å—Ç–µ—Ä–∞");
        return;
    }
    
    Print("========================================");
    Print("üìÅ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –õ–û–ö–ê–õ–¨–ù–û–ì–û –•–†–ê–ù–ï–ù–ò–Ø v2.0");
    Print("========================================");
    
    // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫: FoxterAI/[AccountNumber]/[Symbol]/
    g_StorageAccountDir = STORAGE_ROOT_DIR + "/" + IntegerToString(AccountNumber());
    g_StorageSymbolDir = g_StorageAccountDir + "/" + Symbol();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    CreateDirectoryStructure();
    
    Print("üìÇ –ü–∞–ø–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞: ", g_StorageAccountDir);
    Print("üìÇ –ü–∞–ø–∫–∞ —Å–∏–º–≤–æ–ª–∞: ", g_StorageSymbolDir);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–±–æ—è
    CheckCrashRecovery();
    
    Print("========================================");
}

//+------------------------------------------------------------------+
//| –°–û–ó–î–ê–ù–ò–ï –°–¢–†–£–ö–¢–£–†–´ –î–ò–†–ï–ö–¢–û–†–ò–ô                                   |
//+------------------------------------------------------------------+
void CreateDirectoryStructure() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É
    if(!FolderCreate(STORAGE_ROOT_DIR)) {
        // –ü–∞–ø–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è
        if(!FileIsExist(STORAGE_ROOT_DIR)) {
            Print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É: ", STORAGE_ROOT_DIR);
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –∞–∫–∫–∞—É–Ω—Ç–∞
    if(!FolderCreate(g_StorageAccountDir)) {
        if(!FileIsExist(g_StorageAccountDir)) {
            Print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É –∞–∫–∫–∞—É–Ω—Ç–∞: ", g_StorageAccountDir);
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É —Å–∏–º–≤–æ–ª–∞
    if(!FolderCreate(g_StorageSymbolDir)) {
        if(!FileIsExist(g_StorageSymbolDir)) {
            Print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É —Å–∏–º–≤–æ–ª–∞: ", g_StorageSymbolDir);
        }
    }
}

//+------------------------------------------------------------------+
//| –ü–†–û–í–ï–†–ö–ê –ù–ê –ê–í–ê–†–ò–ô–ù–û–ï –ó–ê–í–ï–†–®–ï–ù–ò–ï                               |
//+------------------------------------------------------------------+
void CheckCrashRecovery() {
    string stateFile = g_StorageSymbolDir + "/" + STATE_FILE;
    
    if(FileIsExist(stateFile)) {
        // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è
        int handle = FileOpen(stateFile, FILE_READ | FILE_TXT);
        if(handle != INVALID_HANDLE) {
            string lastState = FileReadString(handle);
            FileClose(handle);
            
            // –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–ª–∞–≥ —á–∏—Å—Ç–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è
            if(StringFind(lastState, "CLEAN_SHUTDOWN") < 0) {
                g_WasCrashRecovery = true;
                Print("‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–û –ê–í–ê–†–ò–ô–ù–û–ï –ó–ê–í–ï–†–®–ï–ù–ò–ï!");
                Print("üìÅ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ—Å–ª–µ —Å–±–æ—è...");
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                Alert("FoxterAI v2.0\n\n–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∞–≤–∞—Ä–∏–π–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ!\n–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞.");
            }
        }
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è
    SaveRobotState();
}

//+------------------------------------------------------------------+
//| –°–û–•–†–ê–ù–ò–¢–¨ –õ–ò–¶–ï–ù–ó–ò–û–ù–ù–´–ô –ö–õ–Æ–ß –õ–û–ö–ê–õ–¨–ù–û                           |
//+------------------------------------------------------------------+
void SaveLicenseKeyLocal(string key) {
    if(IsTesting() || IsOptimization()) return;
    
    string licenseFile = g_StorageAccountDir + "/" + LICENSE_FILE;
    
    int handle = FileOpen(licenseFile, FILE_WRITE | FILE_TXT);
    if(handle != INVALID_HANDLE) {
        FileWriteString(handle, key);
        FileClose(handle);
        Print("‚úÖ –õ–∏—Ü–µ–Ω–∑–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ: ", licenseFile);
    } else {
        Print("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ª–∏—Ü–µ–Ω–∑–∏–∏!");
    }
}

//+------------------------------------------------------------------+
//| –ü–û–õ–£–ß–ò–¢–¨ –õ–ò–¶–ï–ù–ó–ò–û–ù–ù–´–ô –ö–õ–Æ–ß –ò–ó –õ–û–ö–ê–õ–¨–ù–û–ì–û –•–†–ê–ù–ò–õ–ò–©–ê            |
//+------------------------------------------------------------------+
string GetLicenseKeyLocal() {
    if(IsTesting() || IsOptimization()) {
        return "UNIV-TEST-MODE-KEY";
    }
    
    string licenseFile = g_StorageAccountDir + "/" + LICENSE_FILE;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if(!FileIsExist(licenseFile)) {
        Print("‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –ª–∏—Ü–µ–Ω–∑–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω");
        return "";
    }
    
    // –ß–∏—Ç–∞–µ–º –∫–ª—é—á
    int handle = FileOpen(licenseFile, FILE_READ | FILE_TXT);
    if(handle != INVALID_HANDLE) {
        string key = FileReadString(handle);
        FileClose(handle);
        
        // –û—á–∏—â–∞–µ–º –∫–ª—é—á –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
        string cleanKey = "";
        for(int i = 0; i < StringLen(key); i++) {
            ushort charCode = StringGetCharacter(key, i);
            if(charCode > 32 && charCode < 127) {
                cleanKey = cleanKey + CharToString((uchar)charCode);
            }
        }
        
        if(StringLen(cleanKey) >= 10 && StringSubstr(cleanKey, 0, 5) == "UNIV-") {
            Print("‚úÖ –õ–∏—Ü–µ–Ω–∑–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞");
            return cleanKey;
        }
    }
    
    return "";
}

//+------------------------------------------------------------------+
//| –°–û–•–†–ê–ù–ò–¢–¨ –ù–ê–°–¢–†–û–ô–ö–ò –ü–ê–ù–ï–õ–ò                                     |
//+------------------------------------------------------------------+
void SavePanelSettings() {
    // –í —Ç–µ—Å—Ç–µ—Ä–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞–º—è—Ç—å
    if(IsTesting() || IsOptimization()) {
        return;
    }
    
    string settingsFile = g_StorageSymbolDir + "/" + SETTINGS_FILE;
    
    int handle = FileOpen(settingsFile, FILE_WRITE | FILE_BIN);
    if(handle != INVALID_HANDLE) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–µ—Ä—Å–∏—é —Ñ–æ—Ä–º–∞—Ç–∞
        FileWriteInteger(handle, 200); // –≤–µ—Ä—Å–∏—è 2.0.0
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        FileWriteInteger(handle, g_BotEnabled ? 1 : 0);
        FileWriteInteger(handle, g_TradeDirection);
        FileWriteInteger(handle, g_MaxOrdersBuy);
        FileWriteInteger(handle, g_MaxOrdersSell);
        FileWriteDouble(handle, g_BasketProfitPercent);
        FileWriteInteger(handle, g_BasketType);
        FileWriteInteger(handle, g_BasketAfterN);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é –ø–∞–Ω–µ–ª–∏
        FileWriteInteger(handle, g_PanelPosX);
        FileWriteInteger(handle, g_PanelPosY);
        
        // –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞
        FileWriteLong(handle, TimeCurrent());
        
        FileClose(handle);
        Print("üíæ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è ", Symbol());
    }
}

//+------------------------------------------------------------------+
//| –ó–ê–ì–†–£–ó–ò–¢–¨ –ù–ê–°–¢–†–û–ô–ö–ò –ü–ê–ù–ï–õ–ò                                     |
//+------------------------------------------------------------------+
bool LoadPanelSettings() {
    // –í —Ç–µ—Å—Ç–µ—Ä–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    if(IsTesting() || IsOptimization()) {
        Print("üìÅ –¢–µ—Å—Ç–µ—Ä: –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã");
        return false;
    }
    
    string settingsFile = g_StorageSymbolDir + "/" + SETTINGS_FILE;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if(!FileIsExist(settingsFile)) {
        Print("üìÅ –§–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é");
        return false;
    }
    
    int handle = FileOpen(settingsFile, FILE_READ | FILE_BIN);
    if(handle != INVALID_HANDLE) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é
        int version = FileReadInteger(handle);
        if(version != 200) {
            FileClose(handle);
            Print("‚ö†Ô∏è –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –≤–µ—Ä—Å–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: ", version);
            return false;
        }
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        g_BotEnabled = FileReadInteger(handle) > 0;
        g_TradeDirection = (ENUM_TRADE_DIRECTION)FileReadInteger(handle);
        g_MaxOrdersBuy = FileReadInteger(handle);
        g_MaxOrdersSell = FileReadInteger(handle);
        g_BasketProfitPercent = FileReadDouble(handle);
        g_BasketType = (ENUM_BASKET_TYPE)FileReadInteger(handle);
        g_BasketAfterN = FileReadInteger(handle);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –ø–∞–Ω–µ–ª–∏
        g_PanelPosX = FileReadInteger(handle);
        g_PanelPosY = FileReadInteger(handle);
        
        // –ß–∏—Ç–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É
        datetime savedTime = (datetime)FileReadLong(handle);
        
        FileClose(handle);
        
        Print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –¥–ª—è ", Symbol());
        Print("   –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã: ", TimeToString(savedTime));
        Print("   –†–æ–±–æ—Ç: ", g_BotEnabled ? "–í–ö–õ–Æ–ß–ï–ù" : "–í–´–ö–õ–Æ–ß–ï–ù");
        Print("   –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ", g_TradeDirection);
        Print("   –ü–æ–∑–∏—Ü–∏—è –ø–∞–Ω–µ–ª–∏: X=", g_PanelPosX, " Y=", g_PanelPosY);
        
        return true;
    }
    
    return false;
}

//+------------------------------------------------------------------+
//| –°–û–•–†–ê–ù–ò–¢–¨ –°–û–°–¢–û–Ø–ù–ò–ï –†–û–ë–û–¢–ê                                     |
//+------------------------------------------------------------------+
void SaveRobotState() {
    if(IsTesting() || IsOptimization()) return;
    
    string stateFile = g_StorageSymbolDir + "/" + STATE_FILE;
    
    int handle = FileOpen(stateFile, FILE_WRITE | FILE_TXT);
    if(handle != INVALID_HANDLE) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        string state = "";
        state = state + "VERSION=2.0.0\n";
        state = state + "TIME=" + TimeToString(TimeCurrent()) + "\n";
        state = state + "ACCOUNT=" + IntegerToString(AccountNumber()) + "\n";
        state = state + "SYMBOL=" + Symbol() + "\n";
        state = state + "MAGIC=" + IntegerToString(MagicNumber) + "\n";
        state = state + "BOT_ENABLED=" + (g_BotEnabled ? "YES" : "NO") + "\n";
        state = state + "CLEAN_SHUTDOWN=" + (g_IsCleanShutdown ? "YES" : "NO") + "\n";
        
        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–∏—è—Ö
        state = state + "BUY_SERIES_ACTIVE=" + (g_BuySeries.active ? "YES" : "NO") + "\n";
        state = state + "BUY_SERIES_COUNT=" + IntegerToString(g_BuySeries.count) + "\n";
        state = state + "SELL_SERIES_ACTIVE=" + (g_SellSeries.active ? "YES" : "NO") + "\n";
        state = state + "SELL_SERIES_COUNT=" + IntegerToString(g_SellSeries.count) + "\n";
        
        FileWriteString(handle, state);
        FileClose(handle);
        
        g_LastStateSave = TimeCurrent();
    }
}

//+------------------------------------------------------------------+
//| –ó–ê–ì–†–£–ó–ò–¢–¨ –°–û–°–¢–û–Ø–ù–ò–ï –†–û–ë–û–¢–ê                                     |
//+------------------------------------------------------------------+
bool LoadRobotState() {
    if(IsTesting() || IsOptimization()) return false;
    
    string stateFile = g_StorageSymbolDir + "/" + STATE_FILE;
    
    if(!FileIsExist(stateFile)) {
        return false;
    }
    
    int handle = FileOpen(stateFile, FILE_READ | FILE_TXT);
    if(handle != INVALID_HANDLE) {
        string content = "";
        while(!FileIsEnding(handle)) {
            content = content + FileReadString(handle) + "\n";
        }
        FileClose(handle);
        
        // –ü–∞—Ä—Å–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        if(StringFind(content, "VERSION=2.0") >= 0) {
            Print("üìÅ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–æ–±–æ—Ç–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–æ");
            return true;
        }
    }
    
    return false;
}

//+------------------------------------------------------------------+
//| –ß–ò–°–¢–û–ï –ó–ê–ö–†–´–¢–ò–ï –†–û–ë–û–¢–ê                                         |
//+------------------------------------------------------------------+
void CleanShutdownRobot() {
    Print("========================================");
    Print("üî¥ –ß–ò–°–¢–û–ï –ó–ê–ö–†–´–¢–ò–ï –†–û–ë–û–¢–ê");
    Print("========================================");
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ —á–∏—Å—Ç–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è
    g_IsCleanShutdown = true;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    SaveRobotState();
    
    // –£–¥–∞–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π –ø–∞—Ä—ã
    string settingsFile = g_StorageSymbolDir + "/" + SETTINGS_FILE;
    if(FileIsExist(settingsFile)) {
        FileDelete(settingsFile);
        Print("üóëÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è ", Symbol(), " —É–¥–∞–ª–µ–Ω—ã");
    }
    
    // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è
    string stateFile = g_StorageSymbolDir + "/" + STATE_FILE;
    if(FileIsExist(stateFile)) {
        FileDelete(stateFile);
        Print("üóëÔ∏è –§–∞–π–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è —É–¥–∞–ª–µ–Ω");
    }
    
    Print("‚úÖ –°–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫ –±—É–¥–µ—Ç —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é");
    Print("========================================");
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –æ—Ä–¥–µ—Ä–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
    if(g_BuySeries.active || g_SellSeries.active) {
        Print("‚ö†Ô∏è –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏...");
        CloseAllOrders();
    }
    
    // –£–¥–∞–ª—è–µ–º –ø–∞–Ω–µ–ª—å
    DeletePanel();
    
    // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É —ç–∫—Å–ø–µ—Ä—Ç–∞
    ExpertRemove();
}

//+------------------------------------------------------------------+
//| –ü–†–û–í–ï–†–ö–ê –°–£–©–ï–°–¢–í–û–í–ê–ù–ò–Ø –§–ê–ô–õ–ê –í –õ–û–ö–ê–õ–¨–ù–û–ô –ü–ê–ü–ö–ï                 |
//+------------------------------------------------------------------+
bool FileIsExistLocal(string filepath) {
    // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –¥–ª—è —á—Ç–µ–Ω–∏—è
    int handle = FileOpen(filepath, FILE_READ);
    if(handle != INVALID_HANDLE) {
        FileClose(handle);
        return true;
    }
    return false;
}

//+------------------------------------------------------------------+
//| –ü–ï–†–ò–û–î–ò–ß–ï–°–ö–û–ï –°–û–•–†–ê–ù–ï–ù–ò–ï –°–û–°–¢–û–Ø–ù–ò–Ø                             |
//+------------------------------------------------------------------+
void PeriodicStateSave() {
    if(IsTesting() || IsOptimization()) return;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
    if(TimeCurrent() - g_LastStateSave > 300) {
        SaveRobotState();
        SavePanelSettings();
    }
}

//+------------------------------------------------------------------+
//| –ú–ò–ì–†–ê–¶–ò–Ø –°–¢–ê–†–´–• –î–ê–ù–ù–´–• - –ù–ï –ò–°–ü–û–õ–¨–ó–£–ï–¢–°–Ø!                      |
//+------------------------------------------------------------------+
// –ù–ï –¥–µ–ª–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Å–æ–≥–ª–∞—Å–Ω–æ –¢–ó - –Ω–∞—á–∏–Ω–∞–µ–º —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞!
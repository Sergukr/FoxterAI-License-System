//+------------------------------------------------------------------+
//|                                           5_trend_functions.mqh |
//|                      –§—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å —Ç—Ä–µ–Ω–¥–æ–º –¥–ª—è FoxterAI v1.6 |
//|                              –ë–ï–ó –ë–õ–û–ö–ò–†–û–í–û–ö                      |
//+------------------------------------------------------------------+

//+------------------------------------------------------------------+
//| –†–ê–°–ß–ï–¢ –ù–ï–°–¢–ê–ù–î–ê–†–¢–ù–û–ì–û ATR                                        |
//+------------------------------------------------------------------+
double CalculateCustomATR(string symbol, int timeframe, int period, int shift = 1) {
    double sum = 0;
    
    for(int i = shift; i < shift + period; i++) {
        double high = iHigh(symbol, timeframe, i);
        double low = iLow(symbol, timeframe, i);
        sum += (high - low);
    }
    
    return (period > 0) ? sum / period : 0;
}

//+------------------------------------------------------------------+
//| –ü–†–û–í–ï–†–ö–ê –ù–ê–õ–ò–ß–ò–Ø –ê–ö–¢–ò–í–ù–´–• –û–†–î–ï–†–û–í –í –°–ï–†–ò–ò                       |
//+------------------------------------------------------------------+
bool HasActiveOrders(int orderType) {
    for(int i = 0; i < OrdersTotal(); i++) {
        if(!OrderSelect(i, SELECT_BY_POS, MODE_TRADES)) continue;
        if(OrderSymbol() != Symbol()) continue;
        if(OrderMagicNumber() != MagicNumber) continue;
        if(OrderType() == orderType) {
            return true; // –ï—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –æ—Ä–¥–µ—Ä
        }
    }
    return false;
}

//+------------------------------------------------------------------+
//| –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ù–ê–ß–ê–õ–¨–ù–û–ì–û –¢–†–ï–ù–î–ê                                    |
//+------------------------------------------------------------------+
void DetectInitialTrend() {
    //--- –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–∏–≤–æ—Ç –≤ –∏—Å—Ç–æ—Ä–∏–∏
    double atr = CalculateCustomATR(Symbol(), TrendTimeframe, TrendATR_Period);
    
    for(int i = 1; i < 100; i++) {
        double high = iHigh(Symbol(), TrendTimeframe, i);
        double low = iLow(Symbol(), TrendTimeframe, i);
        double close = iClose(Symbol(), TrendTimeframe, i);
        double open = iOpen(Symbol(), TrendTimeframe, i);
        
        //--- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ª–æ–º –≤–≤–µ—Ä—Ö (–±—ã—á–∏–π –ø–∏–≤–æ—Ç)
        if(i > 1) {
            double prevLow = iLow(Symbol(), TrendTimeframe, i + 1);
            double buyLevel = prevLow + atr;
            
            //--- –¢–µ–ª–æ —Å–≤–µ—á–∏ –∑–∞–∫—Ä—ã–ª–æ—Å—å –≤—ã—à–µ —É—Ä–æ–≤–Ω—è
            double bodyClose = (close > open) ? close : open;
            if(bodyClose > buyLevel) {
                g_TrendState = TREND_BUY;
                g_LastPivotPrice = low;
                g_LastPivotTime = iTime(Symbol(), TrendTimeframe, i);
                g_CurrentBuyLevel = g_LastPivotPrice + atr;
                g_CurrentSellLevel = g_LastPivotPrice - atr;
                
                Print("–ù–∞—á–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–¥: BUY, –ø–∏–≤–æ—Ç = ", g_LastPivotPrice);
                
                //--- –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
                if(ShowVisualObjects && (ShowPivots || ShowATRLevels)) {
                    DrawPivotAndLevels();
                }
                return;
            }
        }
        
        //--- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ª–æ–º –≤–Ω–∏–∑ (–º–µ–¥–≤–µ–∂–∏–π –ø–∏–≤–æ—Ç)
        if(i > 1) {
            double prevHigh = iHigh(Symbol(), TrendTimeframe, i + 1);
            double sellLevel = prevHigh - atr;
            
            //--- –¢–µ–ª–æ —Å–≤–µ—á–∏ –∑–∞–∫—Ä—ã–ª–æ—Å—å –Ω–∏–∂–µ —É—Ä–æ–≤–Ω—è
            double bodyClose = (close < open) ? close : open;
            if(bodyClose < sellLevel) {
                g_TrendState = TREND_SELL;
                g_LastPivotPrice = high;
                g_LastPivotTime = iTime(Symbol(), TrendTimeframe, i);
                g_CurrentBuyLevel = g_LastPivotPrice + atr;
                g_CurrentSellLevel = g_LastPivotPrice - atr;
                
                Print("–ù–∞—á–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–¥: SELL, –ø–∏–≤–æ—Ç = ", g_LastPivotPrice);
                
                //--- –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
                if(ShowVisualObjects && (ShowPivots || ShowATRLevels)) {
                    DrawPivotAndLevels();
                }
                return;
            }
        }
    }
    
    Print("–ù–∞—á–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–¥ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω");
}

//+------------------------------------------------------------------+
//| –û–ë–ù–û–í–õ–ï–ù–ò–ï –¢–†–ï–ù–î–ê                                                |
//+------------------------------------------------------------------+
void UpdateTrend() {
    //--- –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–∫—Ä—ã—Ç–æ–π —Å–≤–µ—á–∏
    double high = iHigh(Symbol(), TrendTimeframe, 1);
    double low = iLow(Symbol(), TrendTimeframe, 1);
    double close = iClose(Symbol(), TrendTimeframe, 1);
    double open = iOpen(Symbol(), TrendTimeframe, 1);
    
    double atr = CalculateCustomATR(Symbol(), TrendTimeframe, TrendATR_Period);
    
    //--- –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–ª–æ —Å–≤–µ—á–∏
    double bodyTop = MathMax(close, open);
    double bodyBottom = MathMin(close, open);
    
    //--- –§–ª–∞–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –±—ã–ª–∞ –ª–∏ —Å–º–µ–Ω–∞ —Ç—Ä–µ–Ω–¥–∞
    bool trendChanged = false;
    
    //--- –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–Ω–¥ BUY
    if(g_TrendState == TREND_BUY) {
        //--- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ–º –≤–Ω–∏–∑
        double sellLevel = g_LastPivotPrice - atr;
        if(bodyBottom < sellLevel) {
            g_TrendState = TREND_SELL;
            g_LastPivotPrice = high;
            g_LastPivotTime = iTime(Symbol(), TrendTimeframe, 1);
            g_CurrentBuyLevel = g_LastPivotPrice + atr;
            g_CurrentSellLevel = g_LastPivotPrice - atr;
            trendChanged = true;
            
            Print("–°–º–µ–Ω–∞ —Ç—Ä–µ–Ω–¥–∞: BUY -> SELL, –Ω–æ–≤—ã–π –ø–∏–≤–æ—Ç = ", g_LastPivotPrice);
        }
        //--- –û–±–Ω–æ–≤–ª—è–µ–º –ø–∏–≤–æ—Ç –µ—Å–ª–∏ –Ω–æ–≤—ã–π –º–∞–∫—Å–∏–º—É–º
        else if(high > g_LastPivotPrice) {
            g_LastPivotPrice = high;
            g_LastPivotTime = iTime(Symbol(), TrendTimeframe, 1);
            g_CurrentBuyLevel = g_LastPivotPrice + atr;
            g_CurrentSellLevel = g_LastPivotPrice - atr;
        }
    }
    //--- –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–Ω–¥ SELL
    else if(g_TrendState == TREND_SELL) {
        //--- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ–º –≤–≤–µ—Ä—Ö
        double buyLevel = g_LastPivotPrice + atr;
        if(bodyTop > buyLevel) {
            g_TrendState = TREND_BUY;
            g_LastPivotPrice = low;
            g_LastPivotTime = iTime(Symbol(), TrendTimeframe, 1);
            g_CurrentBuyLevel = g_LastPivotPrice + atr;
            g_CurrentSellLevel = g_LastPivotPrice - atr;
            trendChanged = true;
            
            Print("–°–º–µ–Ω–∞ —Ç—Ä–µ–Ω–¥–∞: SELL -> BUY, –Ω–æ–≤—ã–π –ø–∏–≤–æ—Ç = ", g_LastPivotPrice);
        }
        //--- –û–±–Ω–æ–≤–ª—è–µ–º –ø–∏–≤–æ—Ç –µ—Å–ª–∏ –Ω–æ–≤—ã–π –º–∏–Ω–∏–º—É–º
        else if(low < g_LastPivotPrice) {
            g_LastPivotPrice = low;
            g_LastPivotTime = iTime(Symbol(), TrendTimeframe, 1);
            g_CurrentBuyLevel = g_LastPivotPrice + atr;
            g_CurrentSellLevel = g_LastPivotPrice - atr;
        }
    }
    
    //--- –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é
    if(ShowVisualObjects && (ShowPivots || ShowATRLevels)) {
        DrawPivotAndLevels();
    }
}

//+------------------------------------------------------------------+
//| –ü–†–û–í–ï–†–ö–ê –ò–ú–ü–£–õ–¨–°–ù–û–ì–û –°–ò–ì–ù–ê–õ–ê                                     |
//+------------------------------------------------------------------+
void CheckImpulseSignal() {
    //--- –î–õ–Ø –ò–ú–ü–£–õ–¨–°–ê –ü–†–û–í–ï–†–Ø–ï–ú –í–°–ï –§–ò–õ–¨–¢–†–´
    if(!CheckFilters()) return;
    
    //--- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–ª–∏
    bool canBuy = (g_TradeDirection == TRADE_BOTH || g_TradeDirection == TRADE_BUY_ONLY);
    bool canSell = (g_TradeDirection == TRADE_BOTH || g_TradeDirection == TRADE_SELL_ONLY);
    
    //--- –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–∫—Ä—ã—Ç–æ–π —Å–≤–µ—á–∏
    double close = iClose(Symbol(), ImpulseTimeframe, 1);
    double open = iOpen(Symbol(), ImpulseTimeframe, 1);
    
    //--- –†–∞–∑–º–µ—Ä —Ç–µ–ª–∞ —Å–≤–µ—á–∏
    double bodySize = MathAbs(close - open);
    
    //--- –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º ATR –¥–ª—è –∏–º–ø—É–ª—å—Å–∞
    double atr = CalculateCustomATR(Symbol(), ImpulseTimeframe, ImpulseATR_Period);
    double minImpulseSize = atr * (ImpulseMinPercent / 100.0);
    
    //--- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–≤–µ—á–∞ –∏–º–ø—É–ª—å—Å–Ω–æ–π
    if(bodySize < minImpulseSize) return;
    
    //--- –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤–µ—á–∏
    bool isBullish = (close > open);
    bool isBearish = (close < open);
    
    //--- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–Ω–¥—É –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç–∏—è
    if(g_TrendState == TREND_BUY && isBullish && canBuy) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –Ω–∞–ª–∏—á–∏–µ –æ—Ä–¥–µ—Ä–æ–≤
        if(!HasActiveOrders(OP_BUY)) {
            //--- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–¥–µ—Ä–∂–∫–∏ –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å–µ—Ä–∏–∏
            if(g_BuySeries.closeTime > 0 && 
               TimeCurrent() - g_BuySeries.closeTime < PeriodSeconds(ImpulseTimeframe) * MinBarsBetweenSeries) {
                Print("–°–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ –¥–ª—è –Ω–æ–≤–æ–π BUY —Å–µ—Ä–∏–∏ –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–π");
                return;
            }
            Print("üí• –ò–º–ø—É–ª—å—Å–Ω—ã–π —Å–∏–≥–Ω–∞–ª BUY! –¢–µ–ª–æ: ", bodySize / Point, "–ø > ", minImpulseSize / Point, "–ø");
            OpenPosition(OP_BUY);
        }
    }
    else if(g_TrendState == TREND_SELL && isBearish && canSell) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –Ω–∞–ª–∏—á–∏–µ –æ—Ä–¥–µ—Ä–æ–≤
        if(!HasActiveOrders(OP_SELL)) {
            //--- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–¥–µ—Ä–∂–∫–∏ –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å–µ—Ä–∏–∏
            if(g_SellSeries.closeTime > 0 && 
               TimeCurrent() - g_SellSeries.closeTime < PeriodSeconds(ImpulseTimeframe) * MinBarsBetweenSeries) {
                Print("–°–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ –¥–ª—è –Ω–æ–≤–æ–π SELL —Å–µ—Ä–∏–∏ –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–π");
                return;
            }
            Print("üí• –ò–º–ø—É–ª—å—Å–Ω—ã–π —Å–∏–≥–Ω–∞–ª SELL! –¢–µ–ª–æ: ", bodySize / Point, "–ø > ", minImpulseSize / Point, "–ø");
            OpenPosition(OP_SELL);
        }
    }
}